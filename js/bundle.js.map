{"version":3,"sources":["webpack:///webpack/bootstrap 1136f2d7f952e921d014","webpack:///./js/planary.js","webpack:///./js/game.js","webpack:///./js/edge.js","webpack:///./js/util.js","webpack:///./js/vertex.js","webpack:///./js/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;ACjBD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAiB,mBAAmB;AACpC;AACA;;AAEA,oCAAmC,uBAAuB;AAC1D;;AAEA;AACA,0BAAyB,2EAA2E;AACpG;;AAEA;AACA;AACA,IAAG;;AAEH;;;;;;AAMA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;AC5CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;ACvDA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AClCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1BA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA0B;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL,2BAA0B,UAAU;AACpC;AACA,IAAG;;AAEH;;;AAGA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1136f2d7f952e921d014\n **/","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const rootEl = $('.planary-root');\n  const game = new Game(0);\n\n  console.log('created ctx & game in planary.js');\n  console.log(ctx);\n  console.log(game);\n\n  new GameView(game, ctx, rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/planary.js\n ** module id = 0\n ** module chunks = 0\n **/","const Edge = require(\"./edge\");\nconst Vertex = require(\"./vertex\");\nconst Util = require(\"./util\");\n\nconst Game = function (level = 0) {\n  this.vertices = [];\n  this.edges = [];\n\n  this.buildGraph(level);\n};\n\nGame.DIM_X = 800;\nGame.DIM_Y = 800;\n\nGame.prototype.buildGraph = function (level) {\n  let game = Game.LEVELS[level];\n\n  for (let i = 0; i < game.vertices; i++) {\n    let x = Math.cos(i * 2 * Math.PI / game.vertices) * 300 + 400;\n    let y = Math.sin(i * 2 * Math.PI / game.vertices) * 300 + 400;\n\n    this.vertices.push(new Vertex({ x: x, y: y, index: i }) );\n  }\n\n  game.edges.forEach ( vertices => {\n    let edge = new Edge({ vertex1: this.vertices[vertices[0]], vertex2: this.vertices[vertices[1]] });\n    this.edges.push(edge);\n\n    this.vertices[vertices[0]].edges.push(edge);\n    this.vertices[vertices[1]].edges.push(edge);\n  });\n\n};\n\n\n\n\n\nGame.LEVELS = [\n  { vertices: 6,\n    edges: [ [0,2], [0,4], [1,4], [1,5], [2,3], [2,4], [2,5], [3,5] ]\n  }\n];\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Util = window.Util = require(\"./util\");\n\nconst Edge = function(options) {\n  this.vertex1 = options.vertex1;\n  this.vertex2 = options.vertex2;\n};\n\nEdge.prototype.draw = function(ctx) {\n  ctx.beginPath();\n  ctx.moveTo(this.vertex1.x, this.vertex1.y);\n  ctx.lineTo(this.vertex2.x, this.vertex2.y);\n  // ctx.moveTo(this.vertex1.y, this.vertex1.x);\n  // ctx.lineTo(this.vertex2.y, this.vertex2.x);\n  ctx.stroke();\n};\n\nEdge.prototype.slope = function() {\n  return Util.slope(this.vertex1, this.vertex2);\n};\n\nEdge.prototype.xIntercept = function() {\n  // debugger;\n  return Util.xIntercept(this.vertex1, this.slope());\n};\n\n// Edge.prototype.equals = function(edge) {\n//   return this.vertex1 === edge.vertex1 && this.vertex2 === edge.vertex2;\n// };\n\nEdge.prototype.shareVertex = function(edge) {\n  return (\n    this.vertex1 === edge.vertex1\n    || this.vertex1 === edge.vertex2\n    || this.vertex2 === edge.vertex1\n    || this.vertex2 === edge.vertex2\n  );\n};\n\nEdge.prototype.intersectsWith = function(edge) {\n  const x = (edge.xIntercept() - this.xIntercept()) / (this.slope() - edge.slope());\n\n  let firstMin = Math.min(this.vertex1.x, this.vertex2.x);\n  let firstMax = Math.max(this.vertex1.x, this.vertex2.x);\n\n  let secondMin = Math.min(edge.vertex1.x, edge.vertex2.x);\n  let secondMax = Math.max(edge.vertex1.x, edge.vertex2.x);\n\n  let onFirst = (firstMin < x && x < firstMax);\n  let onSecond = (secondMin < x && x < secondMax);\n\n  // debugger;\n\n  return (onFirst && onSecond && !this.shareVertex(edge));\n};\n\nmodule.exports = Edge;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/edge.js\n ** module id = 2\n ** module chunks = 0\n **/","const Util = {\n  slope(vertex1, vertex2) {\n    return (vertex2.y - vertex1.y) / (vertex2.x - vertex1.x);\n  },\n\n  xIntercept(vertex, slope) {\n    return vertex.y - (slope * vertex.x);\n  },\n\n  dist(vertex1, vertex2) {\n    return Math.sqrt(\n      Math.pow(vertex1.x - vertex2.x, 2)\n        + Math.pow(vertex1.y - vertex2.y, 2)\n    );\n  },\n\n  angle(vertex1, vertex2) {\n    const diffY = vertex2.y - vertex1.y;\n    const diffX = vertex2.x - vertex1.x;\n    const radians = Math.atan( diffY / diffX );\n    return radians;\n    // return radians / 2 / Math.PI * 360;\n  },\n\n  distFromMouse(vertex, event) {\n    const vertexRadius = 12.5;\n\n    return Math.sqrt(\n      Math.pow(vertex.x + vertexRadius - event.pageX, 2) + Math.pow(vertex.y + vertexRadius - event.pageY, 2)\n    );\n  }\n\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/util.js\n ** module id = 3\n ** module chunks = 0\n **/","const DEFAULTS = {\n\tCOLOR: \"#2794EB\",\n\tRADIUS: 15\n};\n\nconst Vertex = function(options) {\n  this.index = options.index;\n  this.x = options.x;\n  this.y = options.y;\n  this.color = DEFAULTS.COLOR;\n  this.radius = DEFAULTS.RADIUS;\n  this.edges = [];\n  this.selected = false;\n};\n\nVertex.prototype.pos = function() {\n  return [this.x, this.y];\n};\n\nVertex.prototype.draw = function(ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n  ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n  ctx.fill();\n};\n\nmodule.exports = Vertex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/vertex.js\n ** module id = 4\n ** module chunks = 0\n **/","const Util = require(\"./util\");\nconst Game = require(\"./game\");\n\nconst GameView = function (game, ctx, root) {\n  this.game = game;\n  this.ctx = ctx;\n  this.root = root;\n  this.currentMousePos = { x: -1, y: -1 };\n\n  this.renderGraph();\n  this.renderButton();\n  this.bindGraphEvents();\n  this.bindButtonEvents();\n\n  setInterval( () => {\n    this.follow(this.game, this.currentMousePos);\n    this.renderGraph();\n  }, 50);\n};\n\nGameView.prototype.renderButton = function() {\n  $button = $(\"<button class='planar-check'>Is Planar?</button>\");\n\n  this.root.append($button);\n};\n\nGameView.prototype.bindButtonEvents = function() {\n  $(\".planar-check\").on(\"click\", event => {\n    let planarity = true;\n    const game = this.game;\n\n    game.edges.forEach( (edge1, i1) => {\n      game.edges.forEach( (edge2, i2) => {\n        if (i1 !== i2 && edge1.intersectsWith(edge2)) {\n          planarity = false;\n        };\n      });\n    });\n\n    console.log(`final: ${planarity}`);\n    return planarity;\n  });\n\n};\n\n\nGameView.prototype.renderGraph = function() {\n  this.ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n  this.game.vertices.forEach( (vertex, i) => {\n    vertex.draw(this.ctx);\n  });\n\n  this.game.edges.forEach( (edge, i) => {\n    edge.draw(this.ctx);\n  });\n\n};\n\nGameView.prototype.bindGraphEvents = function() {\n  $(\"canvas\").on(\"mousedown\", event => {\n    this.offset = (0, 0);\n    let vertexSelected = false;\n\n    this.game.vertices.forEach( vertex => {\n      const dist = Util.distFromMouse(vertex, event);\n\n      if (dist < 70 && !vertexSelected) {\n        vertex.selected = true;\n        vertexSelected = true;\n      }\n    });\n\n  });\n\n  $(\"canvas\").on(\"mouseup\", event => {\n    this.game.vertices.forEach( vertex => {\n      vertex.selected = false;\n    });\n  });\n\n  $(document).mousemove( event => {\n    const yAdjust = -65;\n    const xAdjust = -8;\n\n    this.currentMousePos.x = event.pageX + xAdjust;\n    this.currentMousePos.y = event.pageY + yAdjust;\n  });\n\n};\n\nGameView.prototype.follow = function(game, currentMousePos) {\n  game.vertices.forEach( vertex => {\n    if (vertex.selected) {\n      vertex.x = currentMousePos.x;\n      vertex.y = currentMousePos.y;\n    }\n  });\n\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/game_view.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}